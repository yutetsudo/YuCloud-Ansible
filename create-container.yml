- hosts: "yufr1"
  tasks: 

  - name: "Import password and token from pass.yml"
    include_vars:
      file: "pass.yml"
      name: "pass"
    tags:
      - "always"

### [AdGard] - Create AdGard container

  - name: "AdGuard | Creating AdGuard container"
    containers.podman.podman_container:
      image: "docker.io/adguard/adguardhome:latest"
      name: "AdGuard"
      hostname: "AdGuard"
      restart_policy: "always"
      memory: "512m"
      env:
        TZ: "Europe/Paris"
        INTERFACE: "tap0"
      ports:
        - "{{ ansible_default_ipv4.address }}:53:53/udp"
        - "{{ ansible_default_ipv4.address }}:53:53/tcp"
        - "8082:3000"
      volume: 
        - "/home/{{ ansible_user }}/adguard/work:/opt/adguardhome/work:Z"
        - "/home/{{ ansible_user }}/adguard/conf:/opt/adguardhome/conf:Z"
      state: "started"
    tags:
      - "adguard"

### [Proxy] - Create Proxy container

  - name: "Proxy | Creating Nginx Proxy Manager container"
    containers.podman.podman_container:
      image: "docker.io/jc21/nginx-proxy-manager:latest"
      name: "Proxy"
      hostname: "Proxy"
      restart_policy: "always"
      memory: "512m"
      network: "proxy"
      ports:
        - "80:80"
        - "443:443"
        - "8081:81"
      volume: 
        - "/home/{{ ansible_user }}/proxy/data:/data:Z"
        - "/home/{{ ansible_user }}/proxy/letsencrypt:/etc/letsencrypt:Z"
      state: "started"
    tags:
      - "proxy"

### [Drive] - Create drive service

  - name: "Drive | Creating drive pod"
    containers.podman.podman_pod:
      name: "drive"
      hostname: "drive"
      network: "proxy"
      state: "started"
    tags:
      - "drive"

  - name: "Drive | Creating DriveDB container"
    containers.podman.podman_container:
      image: "docker.io/library/mariadb"
      pod: "drive"
      name: "DriveDB"
      restart_policy: "always"
      memory: "512m"
      env:
        MYSQL_DATABASE: "nextcloud"
        MYSQL_USER: "{{ pass['MySQL_Username'] }}"
        MYSQL_PASSWORD: "{{ pass['MySQL_Password'] }}"
        MYSQL_ROOT_PASSWORD: "{{ pass['MySQL_Root_Password'] }}"
      volume: 
        - "/home/{{ ansible_user }}/nextcloud/database:/var/lib/mysql:Z" 
      command: "--skip-innodb-read-only-compressed"
      state: "started"
    tags:
      - "drive"

  - name: "Drive | Creating Nextcloud container"
    containers.podman.podman_container:
      image: "docker.io/library/nextcloud"
      pod: "drive"
      name: "Nextcloud"
      restart_policy: "always"
      memory: "1024m"
      env:
        MYSQL_HOST: "drive"
        MYSQL_DATABASE: "nextcloud"
        MYSQL_USER: "{{ pass['MySQL_Username'] }}"
        MYSQL_PASSWORD: "{{ pass['MySQL_Password'] }}"
        NEXTCLOUD_ADMIN_USER: "{{ pass['Nextcloud_Admin_Username'] }}"
        NEXTCLOUD_ADMIN_PASSWORD: "{{ pass['Nextcloud_Admin_Password'] }}"
        NEXTCLOUD_HOSTNAME: "drive"
        NEXTCLOUD_TRUSTED_DOMAINS: "drive.yutetsudo.com"
      volume: 
        - "/home/{{ ansible_user }}/nextcloud/app:/var/www/html:Z"
        - "/home/{{ ansible_user }}/nextcloud/data:/var/www/html/data:Z"
      state: "started"
    tags:
      - "drive"

### [Music] - Create music service

  - name: "Music | Creating music pod"
    containers.podman.podman_pod:
      name: "music"
      hostname: "music"
      network: "proxy"
      state: "started"
    tags:
      - "music"

  - name: "Music | Creating Navidrome container"
    containers.podman.podman_container:
      image: "docker.io/deluan/navidrome:latest"
      pod: "music"
      name: "Navidrome"
      restart_policy: "always"
      memory: "1024m"
      env:
        ND_SCANSCHEDULE: "1h"
        ND_LOGLEVEL: "info"
        ND_SESSIONTIMEOUT: "24h"
        ND_MUSICFOLDER: "/music"
        ND_DATAFOLDER: "/data"
      volume: 
        - "/home/{{ ansible_user }}/navidrome/music:/music:Z"
        - "/home/{{ ansible_user }}/navidrome/data:/data:Z"
      state: "started"
    tags:
      - "music"

### [Stream] - Create stream service

  - name: "Stream | Creating stream pod"
    containers.podman.podman_pod:
      name: "stream"
      hostname: "stream"
      network: "proxy"
      state: "started"
    tags:
      - "stream"

  - name: "Stream | Creating Jellyfin container"
    containers.podman.podman_container:
      image: "docker.io/jellyfin/jellyfin:latest"
      pod: "stream"
      name: "Jellyfin"
      restart_policy: "always"
      memory: "1024m"
      volume: 
        - "/home/{{ ansible_user }}/jellyfin/config:/config:Z"
        - "/home/{{ ansible_user }}/jellyfin/cache:/cache:Z"
        - "/home/{{ ansible_user }}/jellyfin/media:/media:Z"
      state: "started"
    tags:
      - "stream"

### [Vault] - Create vault service

  - name: "Vault | Creating vault pod"
    containers.podman.podman_pod:
      name: "vault"
      hostname: "vault"
      network: "proxy"
      state: "started"
    tags:
      - "vault"

  - name: "Vault | Creating Vaultwarden container"
    containers.podman.podman_container:
      image: "docker.io/vaultwarden/server:latest"
      pod: "vault"
      name: "Vaultwarden"
      restart_policy: "always"
      memory: "512m"
      env:
        ADMIN_TOKEN: "{{ pass['Vaultwarden_Token'] }}"
      volume: 
        - "/home/{{ ansible_user }}/vaultwarden/data:/data:Z"
      state: "started"
    tags:
      - "vault"

### [Status] - Create vault service
### Need to be last to avoid uptime kuma unwanted error

  - name: "Status | Creating status pod"
    containers.podman.podman_pod:
      name: "status"
      hostname: "status"
      network: "proxy"
      state: "started"
    tags:
      - "status"

  - name: "Status | Recreate Uptime Kuma with updated image"
    containers.podman.podman_container:
      image: "docker.io/louislam/uptime-kuma:latest"
      pod: "status"
      name: "Uptime-Kuma"
      restart_policy: "always"
      memory: "512m"
      volume: 
        - "/home/{{ ansible_user }}/kuma/data:/app/data:Z"
      state: "started"
    tags:
      - "status"
